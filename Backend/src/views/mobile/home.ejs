<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />
    <title>Smart Parking - Mobile</title>
    <link rel="stylesheet" href="<%= baseUrl %>/stylesheets/mobile.base.css">
    <link rel="stylesheet" href="<%= baseUrl %>/stylesheets/mobile.home.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css">
    <link rel="icon" type="image/x-icon" href="<%= baseUrl %>/images/logo-white.png">
    <script src="<%= baseUrl %>/scripts/mobile.functions.js"></script>

</head>

<body>

    <div id="load"></div>

    <div id="mobile" class="mobile">
        <div id="header" class="card">
            <h1>Smart Parking</h1>
            <input type="checkbox" name="" id="dark-mode-btn" class="dark-mode-btn">
            <h1 id="logout" class="bi bi-box-arrow-left"></h1>
        </div>

        <section class="card">
            <h3>Simulación de reservas</h3>
            <div>
                <button id="button1" class="button">Solicitar reserva</button>
                <button id="button2" class="button">Cancelar reserva</button>
                <button id="button3" class="button">Marcar llegada</button>
            </div>
        </section>

        <section class="card">
            <h3>Simulación de ingreso y salida</h3>
            <div>
                <button id="button4" class="button">Solicitar ingreso</button>
                <button id="button5" class="button">Marcar salida</button>
            </div>
        </section>

        <section class="card">
            <h3>Respuesta del servidor</h3>
            <div id="response"></div>
        </section>
    </div>
</body>

<script src="/socket.io/socket.io.js"></script>

<script>
    window.addEventListener("load", async (e) => {
        const load = document.getElementById('load')
        const mobile = document.getElementById('mobile')

        e.preventDefault()
        const token = localStorage.getItem("token")

        if (!token) {
            window.location.href = "<%= baseUrl %>/api/mobile"
        }

        const res = await fetch("<%= baseUrl %>/api/auth/confirm-session", {
            method: "POST",
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`
            },
        })

        if (!res.ok) {
            window.location.href = "<%= baseUrl %>/api/mobile"
        }

        mobile.style.display = "flex"
        load.style.display = "none"
    })

    const socket = io("<%= baseUrl %>")
    const button = document.getElementById("button1")
    const button2 = document.getElementById("button2")
    const button3 = document.getElementById("button3")
    const button4 = document.getElementById("button4")
    const button5 = document.getElementById("button5")
    const logoutbtn = document.getElementById("logout")

    const onClickHandler = async (event, req) => {
        event.preventDefault()
        console.log("click")
        const token = localStorage.getItem("token")

        const res = await fetch("<%= baseUrl %>/api/users/profile/", {
            method: 'GET',
            headers: {
                Authorization: `Bearer ${token}`
            }
        })

        const { user } = await res.json()
        const vehicles = user.vehicles
        selectVehicle(vehicles, socket, req)
        
    }
    logoutbtn.addEventListener("click", async (e) => {

        const token = localStorage.getItem("token")

        const res = await fetch("<%= baseUrl %>/api/auth/logout", {
            method: "POST",
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`
            },
        })

        if (res.ok) {
            localStorage.removeItem("token")
            window.location.href = "<%= baseUrl %>/api/mobile"
        } else {
            setResponse("Error al cerrar sesión")
        }
    })

    button.addEventListener("click", async (event) => {
        onClickHandler(event, "user-reservation-req")
    })

    button2.addEventListener("click", async (event) => {
        onClickHandler(event, "user-cancel-reservation")

    })

    button3.addEventListener("click", async (event) => {
        onClickHandler(event, "user-reservation-arrival")
    })

    button4.addEventListener("click", async (event) => {
        onClickHandler(event, "user-access-req")
    })

    button5.addEventListener("click", async (event) => {
        onClickHandler(event, "user-exit-req")
    })

    socket.on("reservation-ok", ({ message }) => {
        setResponse(message)
    })

    socket.on("reservation-denied", ({ message }) => {
        setResponse(message)
    })

    socket.on("reservation-cancel-ok", ({ message }) => {
        setResponse(message)
    })

    socket.on("reservation-cancel-denied", ({ message }) => {
        setResponse(message)
    })

    socket.on("reservation-arrival-ok", ({ message }) => {
        setResponse(message)
    })

    socket.on("reservation-arrival-denied", ({ message }) => {
        setResponse(message)
    })

    socket.on("parking-access-ok", ({ message }) => {
        setResponse(message)
    })

    socket.on("parking-access-denied", ({ message }) => {
        setResponse(message)
    })

    socket.on("parking-exit-ok", ({ message }) => {
        setResponse(message)
    })

    socket.on("parking-exit-denied", ({ message }) => {
        setResponse(message)
    })
    const body = document.body
    const darkModeBtn = document.getElementById('dark-mode-btn')

    function toggleDarkMode() {

        const darkMode = darkModeBtn.checked

        if (darkMode) {
            body.classList.add('dark-mode')
        } else {
            body.classList.remove('dark-mode')
        }
    }

    darkModeBtn.addEventListener('change', toggleDarkMode)
    toggleDarkMode()

</script>

</html>